{"create_time": 0.656721, "error": null, "issues": [{"address": 288, "code": "function play() payable {\n\n        // Participants must spend some fixed ether before playing lottery.\n        assert(msg.value == TICKET_AMOUNT);\n\n        // Increase pot for each participant.\n        pot += msg.value;\n\n        // Compute some *almost random* value for selecting winner from current transaction.\n        // <yes> <report> TIME_MANIPULATION\n        var random = uint(sha3(block.timestamp)) % 2;\n\n        // Distribution: 50% of participants will be winners.\n        if (random == 0) {\n\n            // Send fee to bank account.\n            bank.transfer(FEE_AMOUNT);\n\n            // Send jackpot to winner.\n            msg.sender.transfer(pot - FEE_AMOUNT);\n\n            // Restart jackpot.\n            pot = 0;\n        }\n    }", "contract": "EtherLotto", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "dataset/time_manipulation/ether_lotto.sol", "function": "play()", "lineno": 33, "max_gas_used": 269, "min_gas_used": 174, "severity": "Medium", "sourceMap": "937:743", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x3", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024e806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba2363a1461005c57806376cdb03b1461008757806393e84cd9146100de575b600080fd5b34801561006857600080fd5b506100716100e8565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c6100ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e6610113565b005b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a3414151561012157fe5b346001600082825401925050819055506002426040518082815260200191505060405180910390206001900481151561015657fe5b069050600081141561021f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156101ca573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610215573d6000803e3d6000fd5b5060006001819055505b505600a165627a7a72305820c68efaf93c91197f2e33906f7ff0d36128d45a6b43226fec615e2e142dad4cbc0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x93e84cd9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x93e84cd9", "name": "play()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 354, "code": "if (random == 0) {\n\n            // Send fee to bank account.\n            bank.transfer(FEE_AMOUNT);\n\n            // Send jackpot to winner.\n            msg.sender.transfer(pot - FEE_AMOUNT);\n\n            // Restart jackpot.\n            pot = 0;\n        }", "contract": "EtherLotto", "description": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "dataset/time_manipulation/ether_lotto.sol", "function": "play()", "lineno": 46, "max_gas_used": 26538, "min_gas_used": 6162, "severity": "Low", "sourceMap": "1420:254", "swc-id": "116", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x41100520044004", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024e806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba2363a1461005c57806376cdb03b1461008757806393e84cd9146100de575b600080fd5b34801561006857600080fd5b506100716100e8565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c6100ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e6610113565b005b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a3414151561012157fe5b346001600082825401925050819055506002426040518082815260200191505060405180910390206001900481151561015657fe5b069050600081141561021f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156101ca573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610215573d6000803e3d6000fd5b5060006001819055505b505600a165627a7a72305820c68efaf93c91197f2e33906f7ff0d36128d45a6b43226fec615e2e142dad4cbc0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x93e84cd9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x93e84cd9", "name": "play()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0xa"}]}}, {"address": 511, "code": "msg.sender.transfer(pot - FEE_AMOUNT)", "contract": "EtherLotto", "description": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).", "filename": "dataset/time_manipulation/ether_lotto.sol", "function": "play()", "lineno": 52, "max_gas_used": 123525, "min_gas_used": 14447, "severity": "Low", "sourceMap": "1572:37", "swc-id": "113", "title": "Multiple Calls in a Single Transaction", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0xb", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024e806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba2363a1461005c57806376cdb03b1461008757806393e84cd9146100de575b600080fd5b34801561006857600080fd5b506100716100e8565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c6100ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e6610113565b005b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a3414151561012157fe5b346001600082825401925050819055506002426040518082815260200191505060405180910390206001900481151561015657fe5b069050600081141561021f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156101ca573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610215573d6000803e3d6000fd5b5060006001819055505b505600a165627a7a72305820c68efaf93c91197f2e33906f7ff0d36128d45a6b43226fec615e2e142dad4cbc0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x93e84cd9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x93e84cd9", "name": "play()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0xa"}]}}], "success": true, "sym_cnt": 1, "sym_time": 7.788796, "time": 7.809622, "total_info": {"caller2cnt": {"ether_thief": 4, "get_transaction_sequence": 20, "integer": 6, "is_possible": 23, "mutation_pruner": 6, "state_cahnge_exernal_calls1": 4, "state_cahnge_exernal_calls3": 2}, "caller2time": {"ether_thief": 2.358728, "get_transaction_sequence": 1.578668, "integer": 0.110045, "is_possible": 0.46662099999999995, "mutation_pruner": 0.223048, "state_cahnge_exernal_calls1": 0.191521, "state_cahnge_exernal_calls3": 0.183146}}, "total_states": 642}